<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="new-test-suite.xml" />
	<munit:test name="checkCryptosPrices-normal-Test" doc:id="cc2e42aa-4deb-4155-b5bf-180505938847">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock SOAP Read" doc:id="5000cdfa-0c8b-4f14-9ca8-82db8d3249b0" processor="wsc:consume">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="72ef0f35-0fb1-44b0-ab2e-4ae3f2196089" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsStream('mocks/soap-read-example200.xml')]" mediaType="application/xml" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock coinMarketRequest" doc:id="4118fa7c-14ad-43b7-9d91-7e352f3c3004" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c7e8e51b-4e2d-4e92-af38-6549a7eea251" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsStream('mocks/coin-market-example200.json')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value='#[&#10;&#10;    {&#10;&#10;      "statusCode": 200&#10;&#10;    }&#10;&#10;]' />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock coinCapRequest" doc:id="0f8d623e-95fc-4e00-9f74-bb2ef37e6f62" processor="http:request">
					<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="70013cd3-8200-4528-98c3-1c5af6faf42d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
						<munit-tools:payload value="#[MunitTools::getResourceAsStream('mocks/coin-cap-example200.json')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:attributes value='#[&#10;&#10;    {&#10;&#10;      "statusCode": 200&#10;&#10;    }&#10;&#10;]' />
					</munit-tools:then-return>
				</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="79905a41-7d4a-4a5d-b990-828c9d86328d" processor="wsc:consume">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="20b333dc-e410-495e-bc41-5e23bdb47fc9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsStream('mocks/updateCoin-example.xml')]" mediaType="application/xml" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		
</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="getCheckPrices" doc:id="6e6c06a9-2272-4c82-aeb3-3dcbbe95a423" name="get:\checkCryptosPrice\(id):coin-monitor-process-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="c37dc2a3-872d-4951-bf37-acff0ae74d1c" processor="flow-ref" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7afff84c-0646-4313-ab12-3a01d278a4d6" attributeName="doc:id" />
				</munit-tools:with-attributes>

			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>



</mule>